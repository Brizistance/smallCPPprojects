//An array can be declared with two dimensions. int myArray[R][C] represents a table of int variables with R rows and C columns, 
//so R*C elements total. For example, int myArray[2][3] creates a table with 2 rows and 3 columns, for 6 int variables total. 
//Example accesses are myArray[0][0] = 33; or num = myArray[1][2].

#include <iostream>

using namespace std;

const int ROWS = 3;         // maximum number of rows
const int COLS = 4;         // maximum number of columns

int main() {

    double table[ROWS][COLS] = {   //Array with 3 ROWS and 4 COLumnS
        {10, 90, 50, 30},
        {20, 40, 60, 80},
        {35, 55, 85, 75}
    };  // initializing the array

for (int j = 0; j < COLS; j++){
   for (int i = 0; i < ROWS; i++){
      cout << table[i][j] << " ";
   }
   cout << endl;
}
    
    
    return 0;
}
